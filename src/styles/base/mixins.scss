/* Westfield Health */

/* Fonts */
@mixin co-txt-light {
  font-family: "Co Text Light", "Trebuchet MS" , Arial, Helvetica, sans-serif;
  font-style: normal;
  font-weight: normal;
}

@mixin co-txt-regular {
  font-family: "Co Text Regular", "Trebuchet MS" , Arial, Helvetica, sans-serif;
  font-style: normal;
  font-weight: normal;
}

@mixin co-txt-bold {
  font-family: "Co Text Bold", "Trebuchet MS" , Arial, Helvetica, sans-serif;
  font-style: normal;
  font-weight: normal;
}

/* Buttons */
@mixin button {
  padding: 0.8em 2em;
  margin-bottom: 10px;
  display: inline-block;
  @include co-txt-light;
  font-size: 1.0625em;
  text-align: center;
  text-decoration: none;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;
  cursor: pointer;
}

@mixin button-primary-background {
  background-color: $warm-orange;
  background: -moz-linear-gradient(top, $warm-orange 0%, $healthy-orange 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$warm-orange), color-stop(100%,$healthy-orange));
  background: -webkit-linear-gradient(top, $warm-orange 0%,$healthy-orange 100%);
  background: -o-linear-gradient(top, $warm-orange 0%,$healthy-orange 100%);
  background: -ms-linear-gradient(top, $warm-orange 0%,$healthy-orange 100%);
  background: linear-gradient(to bottom, $warm-orange 0%,$healthy-orange 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$warm-orange', endColorstr='$healthy-orange',GradientType=0 );  
}

@mixin button-secondary-background {
  background-color: transparent;
}

@mixin button-tertiary-background {
  background-color: $responsible-grey;
  background: -moz-linear-gradient(top, $responsible-grey 0%, $confident-grey 100%);
  background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$responsible-grey), color-stop(100%,$confident-grey));
  background: -webkit-linear-gradient(top, $responsible-grey 0%,$confident-grey 100%);
  background: -o-linear-gradient(top, $responsible-grey 0%,$confident-grey 100%);
  background: -ms-linear-gradient(top, $responsible-grey 0%,$confident-grey 100%);
  background: linear-gradient(to bottom, $responsible-grey 0%,$confident-grey 100%);
  filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='$responsible-grey', endColorstr='$confident-grey',GradientType=0 );  
}

@function spacer($key) {
	@if map-has-key($spacer, $key) {
		@return map-get($spacer, $key);
	}
	@warn "Unknown `#{$key}` in $spacer.";
	@return null;
}

@function break($key) {
	@if map-has-key($breakpoints, $key) {
		@return map-get($breakpoints, $key);
	}
	@warn "Unknown `#{$key}` in $breakpoints.";
	@return null;
}

@function color($key) {
	@if map-has-key($colors, $key) {
		@return map-get($colors, $key);
	}
	@warn "Unknown `#{$key}` in $colors.";
	@return null;
}

@mixin below($breakpoint) {
	$value: map-get($breakpoints, $breakpoint);
	@if $value != null {
		@media (max-width: $value) { @content; }
	} @else if type-of($breakpoint) == "number"{
		@media (max-width: $breakpoint) { @content; }
	} @else {
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.";
	}
}

@mixin above($breakpoint) {
	$value: map-get($breakpoints, $breakpoint);
	@if $value != null {
		@media (min-width: $value) { @content; }
	} @else if type-of($breakpoint) == "number"{
		@media (min-width: $breakpoint) { @content; }
	} @else {
		@warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. Please make sure it is defined in `$breakpoints` map.";
	}
}

// https://www.smashingmagazine.com/2016/05/fluid-typography/
@function strip-unit($value) {
	@return $value / ($value * 0 + 1);
}
@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		& {
			font-size: $min-font-size;
			@media screen and (min-width: $min-vw) {
				font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}

			@media screen and (min-width: $max-vw) {
				font-size: $max-font-size;
			}
		}
	} @else {
		@error "Detected mixed units. Please use the same units for all parameters. " + $u1 +", " + $u2 + ", " + $u3 +", "+ $u4;
	}
}
